function init() {
  AOS.init();
  {
    const n = window.location.href.split(/[?#]/)[0];
    Array.from(document.querySelectorAll("#mobileMenu .navbar-nav a")).forEach(
      (t) => {
        var e;
        if (t.href === n) {
          t.classList.add("active");
          e = t.parentElement.parentElement.parentElement;
          t = t.parentElement.parentElement;
          if (e?.classList.contains("nav-item")) {
            e = e.querySelector('[data-fc-type="collapse"]');
            e.classList.add("active");
            if (e) {
              frost.Collapse.getInstanceOrCreate(e).show();
              if (t) {
                t.style.height = null;
              }
            }
          }
        }
      }
    );
  }
  {
    const i = window.location.href.split(/[?#]/)[0];
    Array.from(document.querySelectorAll("#navbar .navbar-nav a")).forEach(
      (t) => {
        var e;
        if (t.href === i) {
          t.classList.add("active");
          e = t.parentElement.parentElement.parentElement;
          if (e?.classList.contains("nav-item")) {
            e.querySelector('[data-fc-type="dropdown"]')?.classList.add(
              "active"
            );
            e = e.parentElement;
            if (e?.classList.contains("nav-item")) {
              e.querySelector('[data-fc-type="dropdown"]')?.classList.add(
                "active"
              );
            }
          }
        }
      }
    );
  }
  window.addEventListener("scroll", (t) => {
    t.preventDefault();
    const navbar = document.getElementById("navbar");
    if (navbar) {
      if (
        75 <= document.body.scrollTop ||
        75 <= document.documentElement.scrollTop
      ) {
        navbar.classList.add("nav-sticky");
      } else {
        navbar.classList.remove("nav-sticky");
      }
    }
  });
  {
    const backToTop = document.querySelector(""); //[data-toggle="back-to-top"]
    window.addEventListener("scroll", function () {
      if (72 < window.pageYOffset) {
        backToTop.classList.add("flex");
        backToTop.classList.remove("hidden");
      } else {
        backToTop.classList.remove("flex");
        backToTop.classList.add("hidden");
      }
    });
    if (backToTop) {
      backToTop.addEventListener("click", function (event) {
        event.preventDefault();
        window.scrollTo({ top: 0, behavior: "smooth" });
      });
    }
  }
  new Swiper("#swiper_one", {
    slidesPerView: 1,
    spaceBetween: 30,
    loop: true,
    autoplay: { delay: 2500, disableOnInteraction: false },
    pagination: { el: ".swiper-pagination", clickable: true },
    rewind: true,
    navigation: { nextEl: ".button-next", prevEl: ".button-prev" },
    breakpoints: { 320: { slidesPerView: 1 } },
  });
  new Swiper("#swiper_two", {
    slidesPerView: 1,
    loop: true,
    autoHeight: true,
    spaceBetween: 30,
    navigation: { nextEl: ".button-next", prevEl: ".button-prev" },
    breakpoints: { 576: { slidesPerView: 1 }, 768: { slidesPerView: 2 } },
  });
  window.onload = (function () {
    function Typewrite(el, toRotate, period) {
      this.toRotate = toRotate;
      this.el = el;
      this.loopNum = 0;
      this.period = parseInt(period, 10) || 2000;
      this.txt = "";
      this.tick();
      this.isDeleting = false;
    }
    Typewrite.prototype.tick = function () {
      var i = this.loopNum % this.toRotate.length;
      var fullTxt = this.toRotate[i];

      if (this.isDeleting) {
        this.txt = fullTxt.substring(0, this.txt.length - 1);
      } else {
        this.txt = fullTxt.substring(0, this.txt.length + 1);
      }

      this.el.innerHTML = '<span class="wrap">' + this.txt + "</span>";

      var that = this;
      var delta = 200 - Math.random() * 100;

      if (this.isDeleting) {
        delta /= 2;
      }

      if (!this.isDeleting && this.txt === fullTxt) {
        delta = this.period;
        this.isDeleting = true;
      } else if (this.isDeleting && this.txt === "") {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
      }

      setTimeout(function () {
        that.tick();
      }, delta);
    };

    var elements = document.getElementsByClassName("typewrite");
    for (var i = 0; i < elements.length; i++) {
      var toRotate = elements[i].getAttribute("data-type");
      var period = elements[i].getAttribute("data-period");
      if (toRotate) {
        new Typewrite(elements[i], JSON.parse(toRotate), period);
      }
    }
  })();
}

init();
